name: '📦 Package and Encrypt'
description: 'Package the built executable and encrypt with 7z'

inputs:
  app-directory:
    description: 'Directory containing the built application'
    required: false
    default: 'app'
  executable-name:
    description: 'Name of the executable file'
    required: false
    default: 'app'
  version:
    description: 'Version string for the package'
    required: true
  artifact-name:
    description: 'Artifact name suffix (e.g., darwin-x64, linux-x64)'
    required: true
  encryption-password:
    description: 'Password for 7z encryption'
    required: true
  platform:
    description: 'Target platform (macos-latest, ubuntu-latest)'
    required: true

outputs:
  package-name:
    description: 'Name of the created package'
    value: ${{ steps.package.outputs.package-name }}

runs:
  using: composite
  steps:
    - name: 📦 Prepare release file
      id: package
      shell: bash
      run: |
        cd ${{ inputs.app-directory }}/
        # 重命名可执行文件，包含平台信息
        FINAL_NAME="app-${{ inputs.version }}-${{ inputs.artifact-name }}"
        
        if [[ "${{ inputs.platform }}" == "macos-latest" ]]; then
          # macOS: 在重命名前再次确保文件干净
          xattr -c dist/${{ inputs.executable-name }} 2>/dev/null || true
          mv dist/${{ inputs.executable-name }} "../${FINAL_NAME}"
        else
          # Linux
          mv dist/${{ inputs.executable-name }} "../${FINAL_NAME}"
        fi

        cd ..
        # 验证文件
        ls -la "${FINAL_NAME}"
        file "${FINAL_NAME}"
        
        echo "package-name=${FINAL_NAME}" >> $GITHUB_OUTPUT

    - name: 🔒 Compress and encrypt build artifact
      shell: bash
      run: |
        # 安装 7z
        if [[ "${{ inputs.platform }}" == "ubuntu-latest" ]]; then
          sudo apt-get update && sudo apt-get install -y p7zip-full
        fi

        # macOS 已经预装了 7z

        # 创建加密的 7z 压缩包
        FILENAME="app-${{ inputs.version }}-${{ inputs.artifact-name }}"
        ARCHIVE_NAME="${FILENAME}.7z"

        echo "🔒 Creating encrypted archive: ${ARCHIVE_NAME}"
        7z a -p"${{ inputs.encryption-password }}" -mhe=on "${ARCHIVE_NAME}" "${FILENAME}"

        # 验证压缩包（不显示内容，避免密码交互）
        echo "📋 Archive info:"
        ls -la "${ARCHIVE_NAME}"
        echo "✅ Archive created successfully"

        # 删除原始文件（只保留加密压缩包）
        rm "${FILENAME}"

        echo "✅ Encrypted archive created successfully: ${ARCHIVE_NAME}"
